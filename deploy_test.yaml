#  Copyright 2017 Google LLC
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

###############################################
# Client Frontend
###############################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  selector:
    matchLabels:
      run: frontend
  replicas: 1
  template:
    metadata:
      labels:
        run: frontend
    spec:
      containers:
        - name: frontend
          image: us-central1-docker.pkg.dev/prj-zeld-infra-core/space-agon/space-agon-frontend:28b1f8b
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    run: frontend
spec:
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
  selector:
    run: frontend
  type: LoadBalancer

---
###############################################
# Dedicated Servers
###############################################

apiVersion: "agones.dev/v1"
kind: Fleet
metadata:
  name: dedicated
spec:
  replicas: 2
  template:
    spec:
      ports:
        - name: default
          portPolicy: Dynamic
          containerPort: 2156
          protocol: TCP
      template:
        spec:
          containers:
            - name: dedicated
              image: us-central1-docker.pkg.dev/prj-zeld-infra-core/space-agon/space-agon-dedicated:7bbb285
              imagePullPolicy: IfNotPresent
              resources:
                requests:
                  memory: 200Mi
                  cpu: 500m
                limits:
                  memory: 200Mi
                  cpu: 500m

---
apiVersion: "autoscaling.agones.dev/v1"
kind: FleetAutoscaler
metadata:
  name: dedicated-autoscaler
spec:
  fleetName: dedicated
  policy:
    type: Buffer
    buffer:
      bufferSize: 2
      minReplicas: 0
      maxReplicas: 10

---
###############################################
# Director
###############################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: director
spec:
  selector:
    matchLabels:
      run: director
  replicas: 1
  template:
    metadata:
      labels:
        run: director
    spec:
      serviceAccount: fleet-allocator
      containers:
        - name: director
          image: us-central1-docker.pkg.dev/prj-zeld-infra-core/space-agon/space-agon-director:277b61e
          imagePullPolicy: IfNotPresent

---
# Create a Role in the default namespace that grants access to the agones api
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: fleet-allocator
  labels:
    app: fleet-allocator
rules:
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create"]
  - apiGroups: ["allocation.agones.dev"]
    resources: ["gameserverallocations"]
    verbs: ["create"]
  - apiGroups: ["agones.dev"]
    resources: ["fleets"]
    verbs: ["get"]

---
# Create a ServiceAccount that will be bound to the above role
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fleet-allocator
  labels:
    app: fleet-allocator

---
# Bind the fleet-allocator ServiceAccount to the fleet-allocator Role
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: fleet-allocator
  labels:
    app: fleet-allocator
subjects:
  - kind: ServiceAccount
    name: fleet-allocator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: fleet-allocator

---
###############################################
# Match Making Function
###############################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mmf
spec:
  selector:
    matchLabels:
      run: mmf
  replicas: 1
  template:
    metadata:
      labels:
        run: mmf
    spec:
      containers:
        - name: mmf
          image: us-central1-docker.pkg.dev/prj-zeld-infra-core/space-agon/space-agon-mmf:277b61e
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 50502

---
apiVersion: v1
kind: Service
metadata:
  name: mmf
  labels:
    run: mmf
spec:
  ports:
    - port: 50502
      protocol: TCP
  selector:
    run: mmf
